{
  "name": "@shadlib/experimental",
  "homepage": "https://github.com/ShadSterling/Shadlib",
  "repository": "https://github.com/ShadSterling/Shadlib",
  "version": "0.1.7",
  "description": "My personal idiomatic helper library",
  "author": "Shad Sterling <me@shadsterling.com>",
  "license": "AGPL-3.0",
  "private": true,
  "keywords": [],
  "main": "build/lib/index.js",
  "scripts": {
    "deps": "npm i",
    "redeps": " npm run reset && npm run deps",
    "audit": "echo \">> auditjs\" && auditjs ossi --quiet -w auditjs-whitelist.json && echo \">> npm audit\" && npm audit",
    "reaudit": "   npm run reset && npm run deps && npm run audit",
    "build": "tsc",
    "dbuild": "                     npm run deps && npm run audit && npm run build",
    "rebuild": "   npm run reset && npm run deps && npm run audit && npm run build",
    "prettier": "prettier --check .",
    "lint": "eslint -c .eslintrc.js src",
    "blint": "                                      npm run audit && npm run build && npm run lint",
    "relint": "    npm run reset && npm run deps && npm run audit && npm run build && npm run lint",
    "test:debug": "npm run blint && mocha --reporter mocha-multi --reporter-options mocha-multi=mocha-multi.json --recursive build/test/**/*.spec.js --inspect",
    "test:one": "DEBUG=Awaitable,Asyncable,AsyncablePromise,DeferredAsyncablePromise mocha --reporter mocha-multi --reporter-options mocha-multi=mocha-multi:one.json --recursive build/test/**/*.spec.js --bail",
    "retest:one": "npm run reset && npm run deps && npm run audit && npm run build && npm run lint && npm run test:one",
    "ctest:one": "                 npm run clean && npm run audit && npm run build && npm run lint && npm run test:one",
    "btest:one": "                                  npm run audit && npm run build && npm run lint && npm run test:one",
    "test": "    : Run tests and generate coverage reports                                      ; echo \"Running Tests\" && ./timeout.sh 300 nyc  --reporter html --reporter json mocha --cache --all --include-all-sources --reporter mocha-multi --reporter-options mocha-multi=mocha-multi.json build/test -x build/test && echo \"Tests Complete\"",
    "ltest": "                                                      npm run lint && npm run test",
    "btest": "                                     npm run audit && npm run build && npm run lint && npm run test",
    "dtest": "                     npm run deps && npm run audit && npm run build && npm run lint && npm run test",
    "retest": "   npm run reset && npm run deps && npm run audit && npm run build && npm run lint && npm run test",
    "cover": "   : Run tests and generate coverage reports                                      ; echo \"Generating Coverage Reports\" && ./timeout.sh 300 nyc report --reporter html --reporter json && echo \"Reports Complete\"",
    "bcover": "                                    npm run audit && npm run build && npm run lint && npm run test && npm run cover",
    "dcover": "                    npm run deps && npm run audit && npm run build && npm run lint && npm run test && npm run cover",
    "doc": "typedoc",
    "bdoc": "                                      npm run audit && npm run build && npm run lint && npm run test && npm run cover && npm run doc",
    "redoc": "    npm run reset && npm run deps && npm run audit && npm run build && npm run lint && npm run test && npm run cover && npm run doc",
    "open": "open reports/mochawesome/mochawesome.html && open coverage/index.html && open doc/index.html",
    "docopen": "                                                                                                                      npm run doc && npm run open",
    "copen": "                                                                                                       npm run cover && npm run doc && npm run open",
    "topen": "                                                                                       npm run test && npm run cover && npm run doc && npm run open",
    "lopen": "                                                                       npm run lint && npm run test && npm run cover && npm run doc && npm run open",
    "bopen": "                                     npm run audit && npm run build && npm run lint && npm run test && npm run cover && npm run doc && npm run open",
    "dopen": "                     npm run deps && npm run audit && npm run build && npm run lint && npm run test && npm run cover && npm run doc && npm run open",
    "reopen": "   npm run reset && npm run deps && npm run audit && npm run build && npm run lint && npm run test && npm run cover && npm run doc && npm run open",
    "ready": "nyc check-coverage --branches 100 --functions 100 --lines 100 --statements 100",
    "tready": "                                                                                      npm run test && npm run cover && npm run doc && npm run ready",
    "bready": "                                    npm run audit && npm run build && npm run lint && npm run test && npm run cover && npm run doc && npm run ready",
    "dready": "                    npm run deps && npm run audit && npm run build && npm run lint && npm run test && npm run cover && npm run doc && npm run ready",
    "reready": "  npm run reset && npm run deps && npm run audit && npm run build && npm run lint && npm run test && npm run cover && npm run doc && npm run ready",
    "start": "echo nothing to start - this is a library",
    "restart": "npm run rebuild && npm run start",
    "clean": "rm -rf build reports .nyc_output coverage doc",
    "reset": "npm run clean && rm -rf node_modules",
    "update": "rm package-lock.json; npm run reready",
    "retry": "npm run audit && npm run build && npm run test && npm run cover && npm run lint | grep -E error\\|Shadlib/src"
  },
  "dependencies": {
    "caller": "latest",
    "debug": "latest",
    "fs-extra": "latest",
    "moment": "latest",
    "proper-lockfile": "latest"
  },
  "devDependencies": {
    "@types/chai": "latest",
    "@types/debug": "latest",
    "@types/fs-extra": "latest",
    "@types/mocha": "latest",
    "@types/node": "latest",
    "@types/source-map-support": "latest",
    "@typescript-eslint/eslint-plugin": "latest",
    "@typescript-eslint/eslint-plugin-tslint": "latest",
    "@typescript-eslint/parser": "latest",
    "auditjs": "latest",
    "chai": "latest",
    "eslint": "latest",
    "eslint-plugin-deprecation": "latest",
    "eslint-plugin-import": "latest",
    "eslint-plugin-jsdoc": "latest",
    "eslint-plugin-no-null": "latest",
    "eslint-plugin-prefer-arrow": "latest",
    "eslint-plugin-prettier": "latest",
    "eslint-plugin-unicorn": "latest",
    "mocha": "latest",
    "mocha-multi": "latest",
    "mocha-sonar-reporter": "latest",
    "mochawesome": "latest",
    "npm": "latest",
    "nyc": "latest",
    "promises-aplus-tests-refreshed": "latest",
    "source-map-support": "latest",
    "typedoc": "latest",
    "typescript": "latest"
  }
}
